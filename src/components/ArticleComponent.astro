---
interface ListItem {
  type: 'ol' | 'ul';
  items: string[];
}

const { title, paragraph1, list, paragraph2 } = Astro.props as {
  title: string;
  paragraph1?: string;
  list: ListItem;
  paragraph2?: string;
};
---

<article>
  <h2>{title}</h2>
  {paragraph1 && <p set:html={paragraph1} />}
    {list.type === 'ol' ? (
      <ol>
        {list.items.map(item => (
          <li set:html={item} />
        ))}
      </ol>
    ) : (
      <ul>
        {list.items.map(item => (
          <li set:html={item} />
        ))}
      </ul>
    )}
  {paragraph2 && <p set:html={paragraph2} />}
</article>

<style lang="scss">
  article {
    display: flex;
    flex-direction: column;
    gap: var(--space-2-5);
    border-bottom: solid 1px var(--gray);
    padding-bottom: var(--space-2-5);
    margin-bottom: var(--space-2-5);

    &:last-child {
      border-bottom: none;
      padding-bottom: 0;
      margin-bottom: 0;
    }
  }

  ol,
  ul {
    padding: 0;
    margin: 0 0 0 var(--space-1);
    display: flex;
    flex-direction: column;
    gap: var(--space-1-5);
  }
</style>